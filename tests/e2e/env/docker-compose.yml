services:
  # PostgreSQL Database for E2E tests
  postgres-e2e:
    image: postgres:16
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 1234
    ports:
      - "5432:5432"
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  # NATS Message Queue for E2E tests
  nats-e2e:
    image: nats:2.10-alpine
    command: ["--jetstream", "--store_dir", "/data", "--http_port", "8222"]
    ports:
      - "4222:4222"
      - "8222:8222"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8222/healthz",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service for E2E tests
  api-e2e:
    image: reffined/sms:v1
    command: api
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=release
    depends_on:
      postgres-e2e:
        condition: service_healthy
      nats-e2e:
        condition: service_healthy
    volumes:
      - ./SmsGW.yaml:/app/SmsGW.yaml:ro
    restart: unless-stopped

  # Worker Service for E2E tests
  worker-e2e:
    image: reffined/sms:v1
    command: worker
    depends_on:
      postgres-e2e:
        condition: service_healthy
      nats-e2e:
        condition: service_healthy
    volumes:
      - ./SmsGW.yaml:/app/SmsGW.yaml:ro
    restart: unless-stopped
