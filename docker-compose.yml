version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sms-postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NATS Message Queue
  nats:
    image: nats:2.10-alpine
    container_name: sms-nats
    command: ["--jetstream", "--store_dir", "/data", "--http_port", "8222"]
    ports:
      - "4222:4222"
      - "8222:8222"
    volumes:
      - nats_data:/data
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: sms-api
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=release
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
    volumes:
      - ./SmsGW.yaml:/app/SmsGW.yaml:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Worker Service
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: sms-worker
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
    volumes:
      - ./SmsGW.yaml:/app/SmsGW.yaml:ro
    healthcheck:
      test: ["CMD", "pgrep", "-f", "./sms worker"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

volumes:
  postgres_data:
  nats_data: